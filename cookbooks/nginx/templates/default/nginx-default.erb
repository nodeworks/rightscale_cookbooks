server {
        listen 8000;
        listen 443 ssl;

        ssl_protocols SSLv3 TLSv1;
#       ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
#       ssl_prefer_server_ciphers on;

        ssl_certificate /etc/nginx/ssl/readycart.com.crt;
        ssl_certificate_key /etc/nginx/ssl/readycart-wildcard.key;

        fastcgi_param HTTPS $https;

        server_name readycart.com;
                root   /var/www/readycart;
                index index.php;

        # Logging --
        access_log  /var/log/nginx/readycart.access.log;
        error_log  /var/log/nginx/readycart.error.log notice;

location ~ ^/(www-status)$ {
    include /etc/nginx/fastcgi_params;
    # fastcgi_pass 127.0.0.1:9000;
    fastcgi_pass unix:/var/run/php5-fpm/readycart.socket;
    fastcgi_index index.php;
}

        # Allow Drupal 7 Image Styles to generate
        location @rewrite {
            rewrite ^/(.*)$ /index.php?q=$1;
        }

        location ~ ^/sites/.*/files/styles/ {
            try_files $uri @rewrite;
        }

        # serve static files directly
        location ~* ^.+\.(?:jpg|jpeg|gif|css|png|js|ico|html|xml|txt|mp4|wmv|mp3|aac|ogv|avi|webm|mov|wav|woff|ttf|svg|otf)$ {
            access_log        off;
            expires           max;
        }

        location ~ \.php$ {
                try_files $uri =404;
                fastcgi_pass unix:/var/run/php5-fpm/readycart.socket;
                # fastcgi_pass 127.0.0.1:9000;
                fastcgi_index index.php;
                include /etc/nginx/fastcgi_params;
                if ($http_x_forwarded_proto = 'https') {
                  set $https_status 'on';
                }
                if ($http_x_forwarded_proto = 'http') {
                  set $https_status 'off';
                }

                fastcgi_param HTTPS $https_status;
        }

        location / {
            root   /var/www/readycart;
            index  index.php index.html;
            # proxy_set_header AppServerName "ReadyCart Webstack";
            proxy_set_header X_Forwarded_Proto $http_x_forwarded_proto;

            # needed for HTTPS
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Host $host;
            proxy_redirect off;
            proxy_max_temp_file_size 0;

            if (!-f $request_filename) {
                rewrite  ^(.*)$  /index.php?q=$1  last;
                break;
            }

            if (!-d $request_filename) {
                rewrite  ^(.*)$  /index.php?q=$1  last;
                break;
            }

        }
}
